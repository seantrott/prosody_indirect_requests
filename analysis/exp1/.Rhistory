ggplot(aes(x = group,
y = future_for_past)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded$`bell cancellation test`
df$bell_test = df$`bell cancellation test`
df$future_correct_recall = df$`future correct RECALL`
df$past_for_future = df$`past instead of future RECALL`
df$future_for_past = df$`future instead of past RECOGNITION`
df$recall_total = df$`RECALL total`
df$past_correct_recall = df$`past correct RECALL`
df$card_sort_a = df$`card sorting test stage a`
df$bell_test = df$`bell cancellation test`
coded = df %>%
filter(card_sort_a %in% c("left to right", "right to left"))
coded %>%
ggplot(aes(x = group,
y = future_correct_recall,
fill = card_sort_a)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
m1 = lm(data = coded,
future_correct_recall ~ group*bell_test)
summary(m1)
df$`line bisection test`
df$line_test = df$`line bisection test`
df$bell_test = df$`bell cancellation test`
df$line_test = df$`line bisection test`
coded = df %>%
filter(card_sort_a %in% c("left to right", "right to left"))
m1 = lm(data = coded,
future_correct_recall ~ group*bell_test + group*line_test)
summary(m1)
m1 = lm(data = coded,
recall_total ~ group*bell_test + group*line_test)
summary(m1)
df$future_recognition = df$`future correct RECOGNITION`
df$past_recognition = df$`past correct RECOGNITION`
df$bell_test = df$`bell cancellation test`
df$line_test = df$`line bisection test`
coded = df %>%
filter(card_sort_a %in% c("left to right", "right to left"))
df = read_csv("/Users/seantrott/Desktop/hebrew-neglect-data.csv")
df$group = factor(df$`_____`)
df$future_correct_recall = df$`future correct RECALL`
df$past_for_future = df$`past instead of future RECALL`
df$future_for_past = df$`future instead of past RECOGNITION`
df$recall_total = df$`RECALL total`
df$past_correct_recall = df$`past correct RECALL`
df$card_sort_a = df$`card sorting test stage a`
# Recognition
df$future_recognition = df$`future correct RECOGNITION`
df$past_recognition = df$`past correct RECOGNITION`
df$rrecognition_totall = df$`RECOGNITION total`
df$bell_test = df$`bell cancellation test`
df$line_test = df$`line bisection test`
coded = df %>%
filter(card_sort_a %in% c("left to right", "right to left"))
coded %>%
ggplot(aes(x = group,
y = future_recognition,
fill = card_sort_a)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = future_recognition)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = past_recognition)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
df$future_recognition = df$`future correct RECOGNITION`
df$past_recognition = df$`past correct RECOGNITION`
df$recognition_totall = df$`RECOGNITION total`
df$bell_test = df$`bell cancellation test`
df$line_test = df$`line bisection test`
coded = df %>%
filter(card_sort_a %in% c("left to right", "right to left"))
coded %>%
ggplot(aes(x = group,
y = recognition_totall)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = recall_total,
fill = card_sort_a)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = recall_total)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = past_correct_recall)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
df$future_past_recall_bias = df$future_correct_recall - df$past_correct_recall
coded$future_past_recall_bias = coded$future_correct_recall - coded$past_correct_recall
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_bar(stat="summary", fun.y="mean", position = "dodge") +
stat_summary (fun.y = function(x){mean(x)},
fun.ymin = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.ymax = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95))
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot()
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot() +
theme_minimal()
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted")
theme_minimal()
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
coded$future_past_recog_bias = coded$future_recognition - coded$past_recognition
coded %>%
ggplot(aes(x = group,
y = future_past_recog_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
m1 = lm(data = coded,
future_past_recall_bias ~ group*bell_test + group*line_test)
summary(m1)
m1 = lm(data = coded,
future_past_recall_bias ~ group)
summary(m1)
m1 = lm(data = coded,
future_past_recall_bias ~ group * card_sort_a)
summary(m1)
m1 = lm(data = coded,
future_past_recall_bias ~ group)
summary(m1)
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
coded %>%
ggplot(aes(x = group,
y = future_past_recog_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
coded %>%
ggplot(aes(x = group,
y = future_past_recall_bias)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
coded$m1 = lm(data = coded,
future_past_recog_bias ~ group)
m1 = lm(data = coded,
future_past_recog_bias ~ group)
summary(m)
summary(m1)
coded$education
m1_recall = lm(data = coded,
future_past_recall_bias ~ group + education)
summary(m1_recall)
coded$NIHSS
coded$gender
table(coded$gender, coded$card_sort_a)
coded %>%
ggplot(aes(x = group,
y = future_past_recog_bias,
fill = card_sort_a)) +
geom_boxplot() +
geom_hline(yintercept = 0, linetype = "dotted") +
theme_minimal()
library(tidyverse)
library(forcats)
library(lme4)
library(tidyverse)
library(forcats)
library(lme4)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp1")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
experimental_data = read.csv("../../data/exp1/experiment1_concat_full.csv")
experimental_data = filter(experimental_data, answer %in% c("first", "second"))
experimental_data$speaker_recoded = fct_recode(experimental_data$speaker,
"S1" = "Danny",
"S2" = "Karen",
"S3" = "Katie",
"S4" = "Maiyi",
"S5" = "Nimish")
experimental_data$item = factor(paste(experimental_data$speaker_recoded, experimental_data$stimNum, sep = "_"))
experimental_data$form = fct_recode(experimental_data$form,
"conventional" = "modal",
"nonconventional" = "indirect")
df_audio$label = fct_recode(df_audio$label,
"Request" = "request",
"Non-request" = "literal")
df_audio$item = paste(df_audio$speaker, df_audio$stimNum, sep="_")
critical_audio = df_audio
slope_IR = filter(critical_audio, label == "Request")$slope_f0_z_score
slope_literal = filter(critical_audio, label == "Non-request")$slope_f0_z_score
slope_diff = slope_IR - slope_literal
duration_f0_IR = filter(critical_audio, label == "Request")$duration_f0_z_score
duration_f0_literal = filter(critical_audio, label == "Non-request")$duration_f0_z_score
duration_f0_diff = duration_f0_IR - duration_f0_literal
sd_intensity_IR = filter(critical_audio, label == "Request")$sd_intensity_z_score
sd_intensity_literal = filter(critical_audio, label == "Non-request")$sd_intensity_z_score
sd_intensity_diff = sd_intensity_IR - sd_intensity_literal
mean_intensity_IR = filter(critical_audio, label == "Request")$mean_intensity_z_score
mean_intensity_literal = filter(critical_audio, label == "Non-request")$mean_intensity_z_score
mean_intensity_diff = mean_intensity_IR - mean_intensity_literal
mean_f0_IR = filter(critical_audio, label == "Request")$mean_f0_z_score
mean_f0_literal = filter(critical_audio, label == "Non-request")$mean_f0_z_score
mean_f0_diff = mean_f0_IR - mean_f0_literal
sd_f0_IR = filter(critical_audio, label == "Request")$sd_f0_z_score
sd_f0_literal = filter(critical_audio, label == "Non-request")$sd_f0_z_score
sd_f0_diff = sd_f0_IR - sd_f0_literal
range_f0_IR = filter(critical_audio, label == "Request")$range_f0_z_score
range_f0_literal = filter(critical_audio, label == "Non-request")$range_f0_z_score
range_f0_diff = range_f0_IR - range_f0_literal
item = filter(critical_audio, label == "Request")$item
new_df = data.frame(item,
slope_diff,
duration_f0_diff,
sd_intensity_diff,
mean_intensity_diff,
mean_f0_diff,
sd_f0_diff,
range_f0_diff)
new_df$item = factor(new_df$item)
new_df
df_audio$label
df_audio$item = paste(df_audio$speaker, df_audio$stimNum, sep="_")
critical_audio = df_audio
slope_IR = filter(critical_audio, label == "Request")$slope_f0_z_score
slope_literal = filter(critical_audio, label == "Non-Request")$slope_f0_z_score
slope_diff = slope_IR - slope_literal
duration_f0_IR = filter(critical_audio, label == "Request")$duration_f0_z_score
duration_f0_literal = filter(critical_audio, label == "Non-Request")$duration_f0_z_score
duration_f0_diff = duration_f0_IR - duration_f0_literal
sd_intensity_IR = filter(critical_audio, label == "Request")$sd_intensity_z_score
sd_intensity_literal = filter(critical_audio, label == "Non-Request")$sd_intensity_z_score
sd_intensity_diff = sd_intensity_IR - sd_intensity_literal
mean_intensity_IR = filter(critical_audio, label == "Request")$mean_intensity_z_score
mean_intensity_literal = filter(critical_audio, label == "Non-Request")$mean_intensity_z_score
mean_intensity_diff = mean_intensity_IR - mean_intensity_literal
mean_f0_IR = filter(critical_audio, label == "Request")$mean_f0_z_score
mean_f0_literal = filter(critical_audio, label == "Non-Request")$mean_f0_z_score
mean_f0_diff = mean_f0_IR - mean_f0_literal
sd_f0_IR = filter(critical_audio, label == "Request")$sd_f0_z_score
sd_f0_literal = filter(critical_audio, label == "Non-Request")$sd_f0_z_score
sd_f0_diff = sd_f0_IR - sd_f0_literal
range_f0_IR = filter(critical_audio, label == "Request")$range_f0_z_score
range_f0_literal = filter(critical_audio, label == "Non-Request")$range_f0_z_score
range_f0_diff = range_f0_IR - range_f0_literal
item = filter(critical_audio, label == "Request")$item
new_df = data.frame(item,
slope_diff,
duration_f0_diff,
sd_intensity_diff,
mean_intensity_diff,
mean_f0_diff,
sd_f0_diff,
range_f0_diff)
new_df$item = factor(new_df$item)
new_df
merged = merge(experimental_data, new_df, by="item")
head(merged)
merged$Correct = fct_recode(factor(merged$correct),
"Yes" = "1",
"No" = "0")
nrow(merged)
nrow(experimental_data)
merged %>%
ggplot(aes(x = form,
y = slope_diff,
fill = Correct)) +
geom_boxplot() +
labs(x = "Form",
y = "Request slope - Non-Request Slope",
title = "F0 slope differences by correct responses") +
guides(fill=guide_legend(title="Correct")) +
theme_minimal()
merged$form = factor(merged$form, levels=c("conventional", "nonconventional"))
merged %>%
ggplot(aes(x = form,
y = slope_diff,
fill = Correct)) +
geom_boxplot() +
labs(x = "Form",
y = "Request slope - Non-Request Slope",
title = "F0 slope differences by correct responses") +
guides(fill=guide_legend(title="Correct")) +
theme_minimal()
f = merged %>%
filter(form == "nonconventional")
nrow(f)
s1 = filter(f, Correct=="No")$slope_diff
s2 = filter(f, Correct=="Yes")$slope_diff
s1
s2
length(s1)
length(s2)
f %>%
ggplot(aes(x = slope_diff,
fill = Correct)) +
geom_density()
f %>%
ggplot(aes(x = Correct,
y = slope_diff)) +
geom_boxplot()
summary(glm(data = f,
Correct ~ slope_diff,
family = binomial()))
mean(s1)
mean(s2)
merged %>%
ggplot(aes(x = form,
y = slope_diff,
fill = Correct)) +
geom_boxplot(outlier.shape = NA) +
labs(x = "Form",
y = "Request slope - Non-Request Slope",
title = "F0 slope differences by correct responses") +
guides(fill=guide_legend(title="Correct")) +
theme_minimal()
ggsave("../../Figures/f0_slope_exp1.png",
units="in", width=6, height=4, dpi=300)
ggsave("../../Figures/f0_slope_exp1.tiff",
units="in", width=6, height=4, dpi=300)
ggsave("../../Figures/f0_slope_exp1.pdf",
units="in", width=6, height=4, dpi=300)
f = merged %>%
filter(form == "nonconventional")
f %>%
ggplot(aes(x = slope_diff,
fill = Correct)) +
geom_density(alpha = .6)
ggsave("../../Figures/f0_slope_nonconventional.pdf",
units="in", width=6, height=4, dpi=300)
library(tidyverse)
library(forcats)
library(lme4)
library(tidyverse)
library(forcats)
library(lme4)
dat = read.csv("../../data/exp1/experiment1_concat_full.csv")
coded = filter(dat, answer %in% c("first", "second"))
coded$speaker = fct_recode(coded$speaker,
"S1" = "Danny",
"S2" = "Karen",
"S3" = "Katie",
"S4" = "Maiyi",
"S5" = "Nimish")
coded$form = fct_recode(coded$form,
"conventional" = "modal",
"non-conventional" = "indirect")
coded$Order = coded$trial_index - 6
coded = coded %>%
filter(Native_Speaker == "Yes")
dat = read.csv("../../data/exp1/experiment1_concat_full.csv")
coded = filter(dat, answer %in% c("first", "second"))
coded$speaker = fct_recode(coded$speaker,
"S1" = "Danny",
"S2" = "Karen",
"S3" = "Katie",
"S4" = "Maiyi",
"S5" = "Nimish")
coded$form = fct_recode(coded$form,
"conventional" = "modal",
"non-conventional" = "indirect")
coded$Order = coded$trial_index - 6
coded = coded %>%
filter(Native_Speaker == "Yes")
temp_demo = distinct(coded, subject, Gender, Age, Native_Speaker)
table(temp_demo$Gender)
write.csv(coded, "../../data/exp1/exp1_critical.csv")
coded = read.csv("../../data/exp1/exp1_critical.csv")
coded$speaker
length(unique(coded$subject))
mean(coded$correct)
sd(coded$correct)
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
experimental_data = read.csv("../../data/exp1/exp1_critical.csv")
experimental_data$item = factor(paste(experimental_data$speaker, experimental_data$stimNum, sep = "_"))
merged = merge(experimental_data, new_df, by="item")
head(merged)
merged$Correct = fct_recode(factor(merged$correct),
"Yes" = "1",
"No" = "0")
df_audio$item = paste(df_audio$speaker, df_audio$stimNum, sep="_")
critical_audio = df_audio
slope_IR = filter(critical_audio, label == "Request")$slope_f0_z_score
slope_literal = filter(critical_audio, label == "Non-Request")$slope_f0_z_score
slope_diff = slope_IR - slope_literal
duration_f0_IR = filter(critical_audio, label == "Request")$duration_f0_z_score
duration_f0_literal = filter(critical_audio, label == "Non-Request")$duration_f0_z_score
duration_f0_diff = duration_f0_IR - duration_f0_literal
sd_intensity_IR = filter(critical_audio, label == "Request")$sd_intensity_z_score
sd_intensity_literal = filter(critical_audio, label == "Non-Request")$sd_intensity_z_score
sd_intensity_diff = sd_intensity_IR - sd_intensity_literal
mean_intensity_IR = filter(critical_audio, label == "Request")$mean_intensity_z_score
mean_intensity_literal = filter(critical_audio, label == "Non-Request")$mean_intensity_z_score
mean_intensity_diff = mean_intensity_IR - mean_intensity_literal
mean_f0_IR = filter(critical_audio, label == "Request")$mean_f0_z_score
mean_f0_literal = filter(critical_audio, label == "Non-Request")$mean_f0_z_score
mean_f0_diff = mean_f0_IR - mean_f0_literal
sd_f0_IR = filter(critical_audio, label == "Request")$sd_f0_z_score
sd_f0_literal = filter(critical_audio, label == "Non-Request")$sd_f0_z_score
sd_f0_diff = sd_f0_IR - sd_f0_literal
range_f0_IR = filter(critical_audio, label == "Request")$range_f0_z_score
range_f0_literal = filter(critical_audio, label == "Non-Request")$range_f0_z_score
range_f0_diff = range_f0_IR - range_f0_literal
item = filter(critical_audio, label == "Request")$item
new_df = data.frame(item,
slope_diff,
duration_f0_diff,
sd_intensity_diff,
mean_intensity_diff,
mean_f0_diff,
sd_f0_diff,
range_f0_diff)
new_df$item = factor(new_df$item)
new_df
merged = merge(experimental_data, new_df, by="item")
head(merged)
merged$Correct = fct_recode(factor(merged$correct),
"Yes" = "1",
"No" = "0")
nrow(merged)
nrow(experimental_data)
