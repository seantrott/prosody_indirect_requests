library(tidyverse)
library(forcats)
library(lme4)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/Experiment2_Full/")
dat = read.csv("data/processed/experiment2_pilot_concat_full.csv")
coded = filter(dat, condition %in% c("literal", "request"))
coded$speaker = fct_recode(coded$speaker,
"S1" = "Danny",
"S2" = "Karen",
"S3" = "Katie",
"S4" = "Maiyi",
"S5" = "Nimish")
# Hack
coded = filter(coded, stimulus == "")
coded$numeric_response = 1 - coded$button_pressed
coded$condition = fct_recode(coded$condition,
"Request" = "request",
"Non-Request" = "literal")
coded$condition = factor(coded$condition, levels=c("Request", "Non-Request"))
coded$form = factor(coded$form, levels=c("nonconventional", "conventional"))
to.csv(coded, "../data")
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/Experiment2_Full/")
dat = read.csv("data/processed/experiment2_pilot_concat_full.csv")
coded = filter(dat, condition %in% c("literal", "request"))
coded$speaker = fct_recode(coded$speaker,
"S1" = "Danny",
"S2" = "Karen",
"S3" = "Katie",
"S4" = "Maiyi",
"S5" = "Nimish")
# Hack
coded = filter(coded, stimulus == "")
coded$numeric_response = 1 - coded$button_pressed
coded$condition = fct_recode(coded$condition,
"Request" = "request",
"Non-Request" = "literal")
coded$condition = factor(coded$condition, levels=c("Request", "Non-Request"))
coded$form = factor(coded$form, levels=c("nonconventional", "conventional"))
coded$Order = (coded$trial_index - 6)/2
write.csv(x=coded, file="exp2_critical.csv" )
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/")
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp2/")
coded = read.csv("../../data/exp1/exp1_critical.csv")
coded
table(temp_demo$Native_Speaker)
tcoded = read.csv("../../data/exp1/exp2_critical.csv")
coded = read.csv("../../data/exp2/exp2_critical.csv")
table(coded$Native_Speaker)
coded = coded %>%
filter(Native_Speaker == "Yes")
length(unique(coded$subject))
write.csv(x=coded, file="exp2_critical.csv")
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp2/")
coded = read.csv("../../data/exp2/exp2_critical.csv")
coded$form_assignment
length(unique(coded$subject))
mean(coded$correct)
sd(coded$correct)
m1 = glmer(data=coded, response ~ condition + (1 + condition | stimNum) +
(1 + condition | subject),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
m1.reduced =glmer(data=coded, response ~ (1 + condition | stimNum) +
(1 + condition | subject),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
anova(m1,m1.reduced)
m1.order =glmer(data=coded, correct ~ Order + (1 | stimNum) +
(1 | subject),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
m1.null =glmer(data=coded, correct ~ (1 | stimNum) +
(1 | subject),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
anova(m1.order,m1.null)
coded$order_by_block = coded$Order %% 12
table(coded$order_by_block)
# Recode the 0s from this procedure
coded$order_by_block = ifelse(coded$order_by_block == 0, 12, coded$order_by_block)
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio$item = factor(paste(df_audio$speaker, df_audio$stimNum, df_audio$label, sep="_"))
coded$item = factor(paste(coded$speaker, coded$stimNum, coded$condition, sep = "_"))
new_df = data.frame(item=df_audio$item,
mean_f0_z_score=df_audio$mean_f0_z_score,
duration_f0_z_score=df_audio$duration_f0_z_score,
range_f0_z_score=df_audio$range_f0_z_score,
sd_f0_z_score=df_audio$sd_f0_z_score,
slope_f0_z_score=df_audio$slope_f0_z_score,
mean_intensity_z_score=df_audio$mean_intensity_z_score,
sd_intensity_z_score=df_audio$sd_intensity_z_score)
merged = merge(coded, new_df, by="item")
nrow(coded)
nrow(merged)
merged$response = fct_recode(merged$response,
"Request" = "request",
"Non-Request" = "literal")
merged$response = factor(merged$response, levels=c("Request", "Non-Request"))
nrow(merged)
model_response_full = glmer(data = merged,
response ~ slope_f0_z_score * form +
mean_f0_z_score * form +
duration_f0_z_score * form +
range_f0_z_score * form +
sd_f0_z_score * form +
mean_intensity_z_score * form +
sd_intensity_z_score * form +
form * speaker +
already_heard_by_speaker +
(1 | subject) + (1 | stimNum),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
summary(model_response_full)
coded_item_means = read_csv("../../data/exp3/item_means.csv")
merged_with_means = merge(merged, coded_item_means, by = c("stimNum", "form", "topic"))
nrow(merged)
nrow(merged_with_means)
merged_with_means$form = factor(merged_with_means$form, levels = c("nonconventional", "conventional"))
merged_with_means$response = factor(merged_with_means$response, levels=c("Non-Request", "Request"))
merged_with_means$condition = factor(merged_with_means$condition, levels=c("Non-Request", "Request"))
model_response_full2 = glmer(data = merged_with_means,
response ~ form * condition + form * mean_request +
(1 | subject),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
summary(                      )
summary(                      )
summary(model_response_full2)
library(tidyverse)
library(forcats)
library(lme4)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/Norming/")
dat = read.csv("data/processed/norming_study_processed.csv")
coded = filter(dat, response %in% c("literal", "request"))
coded$numeric_response = 1 - coded$button_pressed
coded = coded %>%
filter(Native_Speaker == "Yes")
length(unique(coded$subject))
write.csv(file=coded, "/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/data/exp3/exp3_critical.csv")
write.csv(x=coded, file="/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/data/exp3/exp3_critical.csv")
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp3/")
coded = read.csv("../../data/exp3/exp3_critical.csv")
coded %>%
group_by(form) %>%
summarise(mean_request = mean(numeric_response),
sd_request = sd(numeric_response))
df_grouped = coded %>%
group_by(form, topic) %>%
summarise(mean_request = mean(numeric_response),
sd_request = sd(numeric_response))
df_grouped
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp2/")
coded = read.csv("../../data/exp2/exp2_critical.csv")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio$item = factor(paste(df_audio$speaker, df_audio$stimNum, df_audio$label, sep="_"))
coded$item = factor(paste(coded$speaker, coded$stimNum, coded$condition, sep = "_"))
new_df = data.frame(item=df_audio$item,
mean_f0_z_score=df_audio$mean_f0_z_score,
duration_f0_z_score=df_audio$duration_f0_z_score,
range_f0_z_score=df_audio$range_f0_z_score,
sd_f0_z_score=df_audio$sd_f0_z_score,
slope_f0_z_score=df_audio$slope_f0_z_score,
mean_intensity_z_score=df_audio$mean_intensity_z_score,
sd_intensity_z_score=df_audio$sd_intensity_z_score)
merged = merge(coded, new_df, by="item")
nrow(coded)
nrow(merged)
merged$response = fct_recode(merged$response,
"Request" = "request",
"Non-Request" = "literal")
merged$response = factor(merged$response, levels=c("Request", "Non-Request"))
merged$form
merged$form = factor(merged$form, levels=c("nonconventional", "conventional"))
model_response_full = glmer(data = merged,
response ~ slope_f0_z_score * form +
mean_f0_z_score * form +
duration_f0_z_score * form +
range_f0_z_score * form +
sd_f0_z_score * form +
mean_intensity_z_score * form +
sd_intensity_z_score * form +
form * speaker +
already_heard_by_speaker +
(1 | subject) + (1 | stimNum),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
summary(model_response_full)
model_response_no_slope_interaction = glmer(data = merged,
response ~ slope_f0_z_score +
mean_f0_z_score * form +
duration_f0_z_score * form +
range_f0_z_score * form +
sd_f0_z_score * form +
mean_intensity_z_score * form +
sd_intensity_z_score * form +
form * speaker +
already_heard_by_speaker +
(1 | subject) + (1 | stimNum),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
model_response_no_slope = glmer(data = merged,
response ~ mean_f0_z_score * form +
duration_f0_z_score * form +
range_f0_z_score * form +
sd_f0_z_score * form +
mean_intensity_z_score * form +
sd_intensity_z_score * form +
form * speaker +
already_heard_by_speaker +
(1 | subject) + (1 | stimNum),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
anova(model_response_full, model_response_no_slope_interaction)
anova(model_response_no_slope_interaction, model_response_no_slope)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp1")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
experimental_data = read.csv("../../data/exp1/exp1_critical.csv")
experimental_data$item = factor(paste(experimental_data$speaker, experimental_data$stimNum, sep = "_"))
model_all_features_all = glmer(data = df_audio,
label ~ mean_f0_z_score +
range_f0_z_score +
sd_f0_z_score +
duration_f0_z_score +
slope_f0_z_score +
mean_intensity_z_score +
sd_intensity_z_score +
(1 | topic),
family = binomial())
summary(model_all_features_all)
model_all_features = glmer(data = filter(df_audio, form == "conventional"),
label ~ mean_f0_z_score +
range_f0_z_score +
sd_f0_z_score +
duration_f0_z_score +
slope_f0_z_score +
mean_intensity_z_score +
sd_intensity_z_score +
(1 | topic),
family = binomial())
summary(model_all_features)
model_all_features_non = glmer(data = filter(df_audio, form == "nonconventional"),
label ~ mean_f0_z_score +
range_f0_z_score +
sd_f0_z_score +
duration_f0_z_score +
slope_f0_z_score +
mean_intensity_z_score +
sd_intensity_z_score +
(1 | topic),
family = binomial())
summary(model_all_features_non)
coded$form
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp2/")
coded = read.csv("../../data/exp2/exp2_critical.csv")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio$item = factor(paste(df_audio$speaker, df_audio$stimNum, df_audio$label, sep="_"))
coded$item = factor(paste(coded$speaker, coded$stimNum, coded$condition, sep = "_"))
new_df = data.frame(item=df_audio$item,
mean_f0_z_score=df_audio$mean_f0_z_score,
duration_f0_z_score=df_audio$duration_f0_z_score,
range_f0_z_score=df_audio$range_f0_z_score,
sd_f0_z_score=df_audio$sd_f0_z_score,
slope_f0_z_score=df_audio$slope_f0_z_score,
mean_intensity_z_score=df_audio$mean_intensity_z_score,
sd_intensity_z_score=df_audio$sd_intensity_z_score)
merged = merge(coded, new_df, by="item")
nrow(coded)
nrow(merged)
merged$response = fct_recode(merged$response,
"Request" = "request",
"Non-Request" = "literal")
merged$response = factor(merged$response, levels=c("Request", "Non-Request"))
merged$form = factor(merged$form, levels=c("nonconventional", "conventional"))
model_response_full = glmer(data = merged,
response ~ slope_f0_z_score * form +
mean_f0_z_score * form +
duration_f0_z_score * form +
range_f0_z_score * form +
sd_f0_z_score * form +
mean_intensity_z_score * form +
sd_intensity_z_score * form +
form * speaker +
already_heard_by_speaker +
(1 | subject) + (1 | stimNum),
control=glmerControl(optimizer="bobyqa"),
family = binomial())
summary(model_response_full)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp1")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
experimental_data = read.csv("../../data/exp1/exp1_critical.csv")
experimental_data$item = factor(paste(experimental_data$speaker, experimental_data$stimNum, sep = "_"))
df_audio$item = paste(df_audio$speaker, df_audio$stimNum, sep="_")
critical_audio = df_audio
slope_IR = filter(critical_audio, label == "Request")$slope_f0_z_score
slope_literal = filter(critical_audio, label == "Non-Request")$slope_f0_z_score
slope_diff = slope_IR - slope_literal
duration_f0_IR = filter(critical_audio, label == "Request")$duration_f0_z_score
duration_f0_literal = filter(critical_audio, label == "Non-Request")$duration_f0_z_score
duration_f0_diff = duration_f0_IR - duration_f0_literal
sd_intensity_IR = filter(critical_audio, label == "Request")$sd_intensity_z_score
sd_intensity_literal = filter(critical_audio, label == "Non-Request")$sd_intensity_z_score
sd_intensity_diff = sd_intensity_IR - sd_intensity_literal
mean_intensity_IR = filter(critical_audio, label == "Request")$mean_intensity_z_score
mean_intensity_literal = filter(critical_audio, label == "Non-Request")$mean_intensity_z_score
mean_intensity_diff = mean_intensity_IR - mean_intensity_literal
mean_f0_IR = filter(critical_audio, label == "Request")$mean_f0_z_score
mean_f0_literal = filter(critical_audio, label == "Non-Request")$mean_f0_z_score
mean_f0_diff = mean_f0_IR - mean_f0_literal
sd_f0_IR = filter(critical_audio, label == "Request")$sd_f0_z_score
sd_f0_literal = filter(critical_audio, label == "Non-Request")$sd_f0_z_score
sd_f0_diff = sd_f0_IR - sd_f0_literal
range_f0_IR = filter(critical_audio, label == "Request")$range_f0_z_score
range_f0_literal = filter(critical_audio, label == "Non-Request")$range_f0_z_score
range_f0_diff = range_f0_IR - range_f0_literal
item = filter(critical_audio, label == "Request")$item
new_df = data.frame(item,
slope_diff,
duration_f0_diff,
sd_intensity_diff,
mean_intensity_diff,
mean_f0_diff,
sd_f0_diff,
range_f0_diff)
new_df$item = factor(new_df$item)
new_df
merged = merge(experimental_data, new_df, by="item")
head(merged)
merged$Correct = fct_recode(factor(merged$correct),
"Yes" = "1",
"No" = "0")
merged$form
merged$form = factor(merged$form, levels=c("non-conventional", "conventional"))
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/prosody_indirect_requests/analysis/exp1")
df_audio = read_csv("../../data/audio_features/audio_features.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
experimental_data = read.csv("../../data/exp1/exp1_critical.csv")
experimental_data$item = factor(paste(experimental_data$speaker, experimental_data$stimNum, sep = "_"))
df_audio$index = c(1: nrow(df_audio))
prob_outputs = c()
for (iterating_index in c(1:nrow(df_audio))) {
train = df_audio %>%
filter(index != iterating_index)
test = df_audio %>%
filter(index == iterating_index)
model_core = glm(data = train,
label ~ 0,
family = binomial())
probabilities = predict(model_core, test, type="response")
prob_outputs[iterating_index] = probabilities
}
df_audio$lr_probs = prob_outputs
df_audio$lr_probs
df_audio$label
df_audio$lr_prediction = ifelse(df_audio$lr_probs > 0.5,
"Non-Request","Request")
df_audio$lr_correct = df_audio$lr_prediction == df_audio$label
mean(df_audio$lr_correct)
df_audio$index = c(1: nrow(df_audio))
prob_outputs = c()
for (iterating_index in c(1:nrow(df_audio))) {
train = df_audio %>%
filter(index != iterating_index)
test = df_audio %>%
filter(index == iterating_index)
model_core = glm(data = train,
label ~ mean_f0_z_score*form + range_f0_z_score*form +
sd_f0_z_score*form + duration_f0_z_score*form +
slope_f0_z_score*form + mean_intensity_z_score*form +
sd_intensity_z_score*form,
family = binomial())
probabilities = predict(model_core, test, type="response")
prob_outputs[iterating_index] = probabilities
}
df_audio$lr_probs = prob_outputs
df_audio$lr_prediction = ifelse(df_audio$lr_probs > 0.5,
"Non-Request","Request")
df_audio$lr_correct = df_audio$lr_prediction == df_audio$label
mean(df_audio$lr_correct)
